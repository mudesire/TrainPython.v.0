# Autogenerated with SMOP 
from smop.core import *
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m

    
@function
def aps_spectrometer_PWV_modis(batchfile=None,*args,**kwargs):
    varargin = aps_spectrometer_PWV_modis.varargin
    nargin = aps_spectrometer_PWV_modis.nargin

    # aps_spectrometer_PWV_modis(batchfile)
# Scipt to load modis data, mask out clouds. The modis data is assumed to 
# be structured in date folders. The batchfile contains the full path to the
# modis files in these folders. Note that the first line of the batchfile 
# should read "files".
    
    # INPUTS used:
# batchfile             A txt file containing the full path and file names of the
#                       meris data that needs to be processed. The first
#                       line of this file should read "files". The data
#                       should be structured in date folders.
# xlims                 Limits in the x-direction, either in degrees
# ylims                 Limits in the y-direction, either in degrees
# smpres                The output resolution, either in degrees
#                       Units needs to be consistend with xlims and ylims.
    
    # By David Bekaert - University of Leeds
# August 2014
    
    # setting the defaults and checking the input arguments
    if nargin < 1:
        fprintf('aps_spectrometer_PWV_modis(batchfile) \\n')
        error('myApp:argChk',cat('Not enough input arguments...\\n'))
    
    smpres=getparm_aps('region_res',1)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:29
    
    xlims=getparm_aps('region_lon_range',1)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:30
    ylims=getparm_aps('region_lat_range',1)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:31
    stamps_processed=getparm_aps('stamps_processed',1)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:32
    ## the actual scripting
#bounds for all ifgms in degrees or in meters
    xmin=xlims[1]
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:37
    xmax=xlims[2]
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:38
    ymin=ylims[1]
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:39
    ymax=ylims[2]
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:40
    # getting the number of files to be processed
    files=char(textread(batchfile,'%s','headerlines',1))
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:44
    ix_keep=matlabarray([])
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:45
    for counter in arange(1,size(files,1)).reshape(-1):
        if isempty(strfind(files[counter,:],'recal')):
            ix_keep=matlabarray(cat([ix_keep],[counter]))
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:48
    
    files=files[ix_keep,:]
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:51
    # exclude recalibrated files
    ndates=size(files,1)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:53
    # loading the date information
    if strcmp(stamps_processed,'y'):
        ps=load(getparm_aps('ll_matfile',1))
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:57
        ifgs_dates=ps.day
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:58
        fprintf('Stamps processed structure \\n')
    else:
        ifgday_matfile=getparm_aps('ifgday_matfile',1)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:61
        ifgs_dates=load(ifgday_matfile)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:62
        ifgs_dates=ifgs_dates.ifgday
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:63
        ifgs_dates=reshape(ifgs_dates,[],1)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:64
        ifgs_dates=unique(ifgs_dates)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:65
    
    fprintf(cat('Lon range: ',num2str(xmin),' -- ',num2str(xmax),' degrees\\n'))
    fprintf(cat('Lat range: ',num2str(ymin),' -- ',num2str(ymax),' degrees\\n'))
    fprintf(cat('Output resolution is assumed to be ',num2str(smpres),' degrees \\n'))
    # extracting the dates from the filenames
    for k in arange(1,ndates).reshape(-1):
        path,filename_temp,ext_temp=fileparts(files[k,:],nargout=3)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:74
        clear('filename_temp','ext_temp')
        path_temp,date,ext_temp=fileparts(path,nargout=3)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:76
        clear('path_temp','ext_temp')
        # save the paths as structures to allow for variable path lengths
        pathlist[k]=path
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:80
        clear('path')
        # saving the date information
        datelist[k,:]=date
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:83
        clear('date')
    
    #start loop here to calculate atmos correction for each date
    fprintf('Starting the masking and writing of the PWV for each SAR date \\n')
    for n in arange(1,ndates).reshape(-1):
        file=matlabarray(cat(files[n,:]))
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:91
        outfile_watervapor=matlabarray(cat(pathlist[n],filesep,datelist[n,:],'_ZPWV_nointerp.xyz'))
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:92
        lon_grid,lat_grid,watervap=grdread2(file,nargout=3)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:93
        D=grdinfo2(file)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:95
        mod_xmin=D[1]
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:96
        mod_xmax=D[2]
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:97
        mod_ymin=D[3]
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:98
        mod_ymax=D[4]
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:99
        mod_cols=length(lon_grid)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:100
        mod_rows=length(lat_grid)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:101
        clear('D')
        ## Calculate wet delay
    #mask out dodgy pixels
        grdwrite2(lon_grid,lat_grid,watervap,'tmp.grd')
        # downsample and output without interpolation
        grdsmp_cmd=matlabarray(cat('grdsample -R',num2str(xmin),'/',num2str(xmax),'/',num2str(ymin),'/',num2str(ymax),' -I',num2str(smpres),' -F tmp.grd -Gtmp_smp.grd'))
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:109
        a,b=system(grdsmp_cmd,nargout=2)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:110
        grd2xyz_cmd=matlabarray(cat('grd2xyz -R',num2str(xmin),'/',num2str(xmax),'/',num2str(ymin),'/',num2str(ymax),' tmp_smp.grd -bo >',outfile_watervapor))
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:111
        a,b=system(grd2xyz_cmd,nargout=2)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:112
        nointfid=fopen(outfile_watervapor,'r')
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:116
        data_vector=fread(nointfid,'double')
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:117
        fclose(nointfid)
        data=reshape(data_vector,3,[]).T
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:120
        noint=data[:,3]
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:121
        xy=data[:,cat(arange(1,2))]
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:122
        clear('data','data_vector')
        #     figure; scatter3(xy(:,1),xy(:,2),noint,15,noint,'filled'); view(0,90); axis equal; axis tight
        #output
        data_write=cat(xy,noint).T
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:128
        fid=fopen(outfile_watervapor,'w')
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:129
        fwrite(fid,data_write,'double')
        fclose(fid)
        clear('data_write')
        fprintf(cat(num2str(n),' completed out of ',num2str(ndates),'\\n'))
    
    a,b=system('rm tmp.grd tmp.xyz tmp2.grd tmp_fil.grd tmp_smp.grd tmp_smp2.grd tmp_smp_fil.grd',nargout=2)
# Trainmatlab.v.0/aps_spectrometer_PWV_modis.m:139