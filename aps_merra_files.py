# Autogenerated with SMOP 
from smop.core import *
# Trainmatlab.v.0/aps_merra_files.m

    
@function
def aps_merra_files(orderflag=None,merra_model=None,*args,**kwargs):
    varargin = aps_merra_files.varargin
    nargin = aps_merra_files.nargin

    #     Copyright (C) 2016  Bekaert David
#     Email: eedpsb@leeds.ac.uk or davidbekaert.com
# 
#     This program is free software; you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation; either version 2 of the License, or
#     (at your option) any later version.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License along
#     with this program; if not, write to the Free Software Foundation, Inc.,
#     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
    
    # By David Bekaert - April 2016
    
    
    # MERRA data overview at website:
# http://disc.sci.gsfc.nasa.gov/uui/datasets/GES_DISC_MAI6NPANA_V5.2.0/summary?keywords=#22MERRA#22
# MERRA has data from 1979 till 
# download data page is at: ftp://goldsmr3.sci.gsfc.nasa.gov/data/s4pa/MERRA/MAI6NPANA.5.2.0/
# download data page for subset is different:
# If the year is < 1993:
# http://goldsmr3.sci.gsfc.nasa.gov/daac-bin/OTF/HTTP_services.cgi?FILENAME=#2Fdata#2Fs4pa#2FMERRA#2FMAI6NPANA.5.2.0#2F/YEAR/#2F/MONTH/#2FMERRA100.prod.assim.inst6_3d_ana_Np./DATE/.hdf&FORMAT=SERGLw&BBOX=-90#2C-180#2C90#2C180&TIME=1979-01-01T/HOUR/#3A00#3A00#2F1979-01-01T/HOUR/#3A00#3A00&LABEL=MERRA100.prod.assim.inst6_3d_ana_Np./DATE/.SUB.hdf&FLAGS=&SHORTNAME=MAI6NPANA&SERVICE=SUBSET_LATS4D&LAYERS=&VERSION=1.02&VARIABLES=ps#2Ch#2Ct#2Cqv
# If the year is < 2001:
# http://goldsmr3.sci.gsfc.nasa.gov/daac-bin/OTF/HTTP_services.cgi?FILENAME=#2Fdata#2Fs4pa#2FMERRA#2FMAI6NPANA.5.2.0#2F/YEAR/#2F/MONTH/#2FMERRA200.prod.assim.inst6_3d_ana_Np./DATE/.hdf&FORMAT=SERGLw&BBOX=-90#2C-180#2C90#2C180&TIME=1979-01-01T/HOUR/#3A00#3A00#2F1979-01-01T/HOUR/#3A00#3A00&LABEL=MERRA200.prod.assim.inst6_3d_ana_Np./DATE/.SUB.hdf&FLAGS=&SHORTNAME=MAI6NPANA&SERVICE=SUBSET_LATS4D&LAYERS=&VERSION=1.02&VARIABLES=ps#2Ch#2Ct#2Cqv
# If the year is >=2001:
# http://goldsmr3.sci.gsfc.nasa.gov/daac-bin/OTF/HTTP_services.cgi?FILENAME=#2Fdata#2Fs4pa#2FMERRA#2FMAI6NPANA.5.2.0#2F/YEAR/#2F/MONTH/#2FMERRA300.prod.assim.inst6_3d_ana_Np./DATE/.hdf&FORMAT=SERGLw&BBOX=-90#2C-180#2C90#2C180&TIME=1979-01-01T/HOUR/#3A00#3A00#2F1979-01-01T/HOUR/#3A00#3A00&LABEL=MERRA300.prod.assim.inst6_3d_ana_Np./DATE/.SUB.hdf&FLAGS=&SHORTNAME=MAI6NPANA&SERVICE=SUBSET_LATS4D&LAYERS=&VERSION=1.02&VARIABLES=ps#2Ch#2Ct#2Cqv
    
    # MERRA2 data overview at website:
# http://disc.sci.gsfc.nasa.gov/uui/datasets/GES_DISC_M2I6NPANA_V5.12.4/summary?keywords=#22MERRA#22
# MERRA2 is continuation of MERRA and has data from 1979 till current
# downlaod data page is at: ftp://goldsmr5.sci.gsfc.nasa.gov/data/s4pa/MERRA2/M2I6NPANA.5.12.4/
    
    if nargin < 1 or isempty(orderflag):
        orderflag=1
# Trainmatlab.v.0/aps_merra_files.m:41
    
    ## Loading dataset specific paramters
    ifgday_matfile=getparm_aps('ifgday_matfile',1)
# Trainmatlab.v.0/aps_merra_files.m:45
    ifgs_dates=load(ifgday_matfile)
# Trainmatlab.v.0/aps_merra_files.m:46
    UTC_sat=getparm_aps('UTC_sat',1)
# Trainmatlab.v.0/aps_merra_files.m:47
    stamps_processed=getparm_aps('stamps_processed',1)
# Trainmatlab.v.0/aps_merra_files.m:48
    merra_datapath=getparm_aps('merra_datapath',1)
# Trainmatlab.v.0/aps_merra_files.m:49
    if isempty(merra_datapath):
        error('please specify merra_datapath')
    
    # loading the data
    if strcmp(stamps_processed,'y'):
        dates=ifgs_dates.day
# Trainmatlab.v.0/aps_merra_files.m:58
        load('psver')
        fprintf('Stamps processed structure \\n')
        #    dates  = datestr(dates_test,'yyyymmdd') #
#    str='';
#    while ~strcmpi(str,'y') && ~strcmpi(str,'n') 
#       fprintf(['Do you want to overwrite existing files? \n'])  
#       str = input('[y: for yes, n: no] \n','s');
#    end
#    ###Check if scenes have already been downloaded, and then you decide if you wish to overwrite.
#    remove_dates=[]
#    for i=1:length(dates)
#       elm=dates(i,1);
#       check_merra_path=[merra_datapath filesep int2str(elm)];
#       if exist(check_merra_path,'dir') == 7
#          if strcmpi(str,'y')
#             remove_dates=[];
#          else
#             remove_dates=[elm;remove_dates];
#          end
#       end
#    end
#    if isempty(remove_dates) == 1
#       dates;
#    else
#       dates=setdiff(dates,remove_dates,'rows');
#    end
#    if isempty(dates) == 1
#       fprintf('No new files to be downloaded \n')
#       return
#    else
#       dates = datenum(num2str(dates),'yyyymmdd');
#       dates = datenum(num2str(dates),'yyyymmdd');
#       load psver
#       fprintf('Stamps processed structure \n')
#    end
    else:
        psver=2
# Trainmatlab.v.0/aps_merra_files.m:95
        ifgs_dates=ifgs_dates.ifgday
# Trainmatlab.v.0/aps_merra_files.m:96
        dates=reshape(ifgs_dates,[],1)
# Trainmatlab.v.0/aps_merra_files.m:97
        dates=unique(dates)
# Trainmatlab.v.0/aps_merra_files.m:98
        dates=datenum(num2str(dates),'yyyymmdd')
# Trainmatlab.v.0/aps_merra_files.m:99
        #     str='';
#     while ~strcmpi(str,'y') && ~strcmpi(str,'n') 
#         fprintf(['Do you want to overwrite existing files? \n'])  
#         str = input('[y: for yes, n: no] \n','s');
#     end
#     ###Check if scenes have already been downloaded, and then you decide if you wish to overwrite.
#     remove_dates=[];
#     for i=1:length(dates)
#         elm=dates(i,1);
#         check_merra_path=[merra_datapath filesep int2str(elm)];
#         if exist(check_merra_path,'dir') == 7
#             if strcmpi(str,'y')
#                 remove_dates=[];
#             end
#             if strcmpi(str,'n')
#                 remove_dates=[elm;remove_dates];
#             end
#         end
#     end
#     if isempty(remove_dates) == 1
#         dates;
#     else
#         dates=setdiff(dates,remove_dates,'rows');
#     end
#     if isempty(dates) == 1
#         fprintf('No new files to be downloaded \n')
#         return
#     else
#         dates = datenum(num2str(dates),'yyyymmdd');
#     end
    
    ## MERRA model specific
    timelist_model=matlabarray(cat(['0000'],['0600'],['1200'],['1800'],['0000']))
# Trainmatlab.v.0/aps_merra_files.m:134
    
    #merra_model = getparm_aps('merra_model');              # the merra model
    
    ## Compute based on Satellite pass which weather model outputs that will be used
    time_before,time_after,date_before,date_after,f_before,f_after=aps_weather_model_times(timelist_model,dates,UTC_sat,nargout=6)
# Trainmatlab.v.0/aps_merra_files.m:138
    time_vector=matlabarray(cat([time_before],[time_after]))
# Trainmatlab.v.0/aps_merra_files.m:139
    date_vector=matlabarray(cat([date_before],[date_after]))
# Trainmatlab.v.0/aps_merra_files.m:140
    clear('f_before','f_after')
    ###Check if scenes have already been downloaded, and then you decide if you wish to overwrite.
    
    ## downloading the data
# number of files that needs to be downloaded
    n_files=size(date_vector,1)
# Trainmatlab.v.0/aps_merra_files.m:146
    # generate some strings that will be used
    wget_string=repmat('wget ',n_files,1)
# Trainmatlab.v.0/aps_merra_files.m:148
    # now generate the full paths where the data can be downloaded
    if strcmpi(merra_model,'merra'):
        datasetnumber=dot(200.0,ones(cat(n_files,1)))
# Trainmatlab.v.0/aps_merra_files.m:153
        datasetnumber[str2num(date_vector[:,1:4]) < 1993]=100
# Trainmatlab.v.0/aps_merra_files.m:154
        datasetnumber[str2num(date_vector[:,1:4]) >= 2001]=300
# Trainmatlab.v.0/aps_merra_files.m:155
        datasetnumber_str=num2str(datasetnumber)
# Trainmatlab.v.0/aps_merra_files.m:156
        filesTOdownlaod=matlabarray(cat(repmat('http://goldsmr3.sci.gsfc.nasa.gov/daac-bin/OTF/HTTP_services.cgi?FILENAME=%2Fdata%2Fs4pa%2FMERRA%2FMAI6NPANA.5.2.0%2F',n_files,1),date_vector[:,1:4],repmat('%2F',n_files,1),date_vector[:,5:6],repmat('%2FMERRA',n_files,1),datasetnumber_str,repmat('.prod.assim.inst6_3d_ana_Np.',n_files,1),date_vector[:,1:8],repmat('.hdf&FORMAT=SERGLw&BBOX=-90%2C-180%2C90%2C180&TIME=1979-01-01T',n_files,1),time_vector[:,1:2],repmat('%3A00%3A00%2F1979-01-01T',n_files,1),time_vector[:,1:2],repmat('%3A00%3A00&LABEL=MERRA300.prod.assim.inst6_3d_ana_Np.',n_files,1),date_vector[:,1:8],repmat('.SUB.hdf&FLAGS=&SHORTNAME=MAI6NPANA&SERVICE=SUBSET_LATS4D&LAYERS=&VERSION=1.02&VARIABLES=ps%2Ch%2Ct%2Cqv',n_files,1)))
# Trainmatlab.v.0/aps_merra_files.m:158
        downloadFILEname=matlabarray(cat(repmat(cat(merra_datapath,filesep),n_files,1),date_vector[:,1:8],repmat(filesep,n_files,1),repmat('MERRA_',n_files,1),date_vector[:,1:8],repmat('_',n_files,1),time_vector[:,1:2],repmat('.hdf',n_files,1)))
# Trainmatlab.v.0/aps_merra_files.m:160
    else:
        if strcmpi(merra_model,'merra2'):
            crop_range_in=2
# Trainmatlab.v.0/aps_merra_files.m:164
            # weather model region
            region_lat_range=getparm_aps('region_lat_range')
# Trainmatlab.v.0/aps_merra_files.m:166
            region_lon_range=getparm_aps('region_lon_range')
# Trainmatlab.v.0/aps_merra_files.m:167
            if isempty(region_lat_range) == 1:
                error('Specify the region for the weather model data')
            fprintf('increasing crop area by %s deg in each direction \\n',num2str(crop_range_in))
            S=num2str(min(round(region_lat_range)) - crop_range_in)
# Trainmatlab.v.0/aps_merra_files.m:172
            N=num2str(max(round(region_lat_range)) + crop_range_in)
# Trainmatlab.v.0/aps_merra_files.m:173
            W=num2str(min(round(region_lon_range)) - crop_range_in)
# Trainmatlab.v.0/aps_merra_files.m:174
            E=num2str(max(round(region_lon_range)) + crop_range_in)
# Trainmatlab.v.0/aps_merra_files.m:175
            # gnerating the string
            datasetnumber=dot(200.0,ones(cat(n_files,1)))
# Trainmatlab.v.0/aps_merra_files.m:179
            datasetnumber[str2num(date_vector[:,1:4]) < 1993]=100
# Trainmatlab.v.0/aps_merra_files.m:180
            datasetnumber[str2num(date_vector[:,1:4]) >= 2001]=300
# Trainmatlab.v.0/aps_merra_files.m:181
            datasetnumber[str2num(date_vector[:,1:4]) >= 2011]=400
# Trainmatlab.v.0/aps_merra_files.m:182
            datasetnumber_str=num2str(datasetnumber)
# Trainmatlab.v.0/aps_merra_files.m:184
            filesTOdownlaod=matlabarray(cat(repmat('http://goldsmr5.gesdisc.eosdis.nasa.gov/daac-bin/OTF/HTTP_services.cgi?FILENAME=%2Fdata%2Fs4pa%2FMERRA2%2FM2I6NPANA.5.12.4%2F',n_files,1),date_vector[:,1:4],repmat('%2F',n_files,1),date_vector[:,5:6],repmat('%2FMERRA2_',n_files,1),datasetnumber_str,repmat('.inst6_3d_ana_Np.',n_files,1),date_vector[:,1:8],repmat('.nc4&FORMAT=bmM0Yy8&BBOX=',n_files,1),repmat(num2str(S),n_files,1),repmat('%2C',n_files,1),repmat(num2str(W),n_files,1),repmat('%2C',n_files,1),repmat(num2str(N),n_files,1),repmat('%2C',n_files,1),repmat(num2str(E),n_files,1),repmat('&TIME=1979-01-01T',n_files,1),time_vector[:,1:2],repmat('%3A00%3A00%2F1979-01-01T',n_files,1),time_vector[:,1:2],repmat('%3A00%3A00&LABEL=svc_MERRA2_',n_files,1),datasetnumber_str,repmat('.inst6_3d_ana_Np.',n_files,1),date_vector[:,1:8],repmat('.nc4&FLAGS=&SHORTNAME=M2I6NPANA&SERVICE=SUBSET_MERRA2&LAYERS=&VERSION=1.02&VARIABLES=',n_files,1)))
# Trainmatlab.v.0/aps_merra_files.m:186
            downloadFILEname=matlabarray(cat(repmat(cat(merra_datapath,filesep),n_files,1),date_vector[:,1:8],repmat(filesep,n_files,1),repmat('MERRA2_',n_files,1),date_vector[:,1:8],repmat('_',n_files,1),time_vector[:,1:2],repmat('.nc4',n_files,1)))
# Trainmatlab.v.0/aps_merra_files.m:188
        else:
            error('Does not exist. Either MERRA or MERRA2 model')
    
    # order the data and download it.
    overwrite_flag=- 1
# Trainmatlab.v.0/aps_merra_files.m:198
    if orderflag == 1:
        # not that some symbols from the url needs escape char to get through using wget.
        for k in arange(1,n_files).reshape(-1):
            if exist(downloadFILEname[k,:],'file') == 0:
                path,downloadfile,file_ext=fileparts(downloadFILEname[k,:],nargout=3)
# Trainmatlab.v.0/aps_merra_files.m:203
                if exist(path,'dir') != 7:
                    mkdir(path)
                fprintf(cat('Downloading: ',downloadfile,file_ext,'\\n'))
                try:
                    pause(5)
                    urlwrite(filesTOdownlaod[k,:],downloadFILEname[k,:])
                finally:
                    pass
            else:
                path,downloadfile,file_ext=fileparts(downloadFILEname[k,:],nargout=3)
# Trainmatlab.v.0/aps_merra_files.m:217
                if overwrite_flag == - 1:
                    str=''
# Trainmatlab.v.0/aps_merra_files.m:219
                    while logical_not(strcmpi(str,'y')) and logical_not(strcmpi(str,'n')):

                        fprintf(cat('Do you want to overwrite existing files? \\n'))
                        str=input_('[y: for yes, n: no] \\n','s')
# Trainmatlab.v.0/aps_merra_files.m:222

                    if strcmpi(str,'n'):
                        overwrite_flag=0
# Trainmatlab.v.0/aps_merra_files.m:225
                    else:
                        overwrite_flag=1
# Trainmatlab.v.0/aps_merra_files.m:227
                # check if the files need to be overwritten
                if overwrite_flag == 1:
                    delete(downloadFILEname[k,:])
                    fprintf(cat('Downloading: ',downloadfile,file_ext,'\\n'))
                    try:
                        pause(5)
                        urlwrite(filesTOdownlaod[k,:],downloadFILEname[k,:])
                    finally:
                        pass
                else:
                    if overwrite_flag == 0:
                        fprintf('File %s has already been downloaded \\n',cat(downloadfile,file_ext))
    else:
        # outputing this information to a file
        fid=fopen(cat(upper(merra_model),'_files.txt'),'w')
# Trainmatlab.v.0/aps_merra_files.m:249
        fprintf(cat('Required ',upper(merra_model),' files for all interferograms \\n'))
        for k in arange(1,size(filesTOdownlaod,1)).reshape(-1):
            fprintf('%s \\n',cat(filesTOdownlaod[k,:]))
            fprintf(fid,'%s \\n',cat(filesTOdownlaod[k,:]))
        fclose(fid)
    