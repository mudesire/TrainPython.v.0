# Autogenerated with SMOP 
from smop.core import *
# Trainmatlab.v.0/get_la_stamps.m

    
@function
def get_la_stamps(insarpath=None,len_=None,width=None,*args,**kwargs):
    varargin = get_la_stamps.varargin
    nargin = get_la_stamps.nargin

    # function that computes the look angle for the stamps results based on the
# look_angle.1.in file and the wdith and length of the multi-looked
# (cropped) SAR image.
    
    #     Copyright (C) 2015  Bekaert David - University of Leeds
#     Email: eedpsb@leeds.ac.uk or davidbekaert.com
# 
#     This program is free software; you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation; either version 2 of the License, or
#     (at your option) any later version.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License along
#     with this program; if not, write to the Free Software Foundation, Inc.,
#     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
    
    # By Bekaert David - Unviersity of Leeds
# modified from the StaMPS script ps_load_initial
# 
# get_la_stamps(insarpath,len,width)
    
    # the file names
    load(cat(insarpath,filesep,'psver.mat'))
    laname=matlabarray(cat(insarpath,filesep,'look_angle.1.in'))
# Trainmatlab.v.0/get_la_stamps.m:30
    ps=load(cat(insarpath,filesep,'ps',num2str(psver),'.mat'))
# Trainmatlab.v.0/get_la_stamps.m:31
    hgt=load(cat(insarpath,filesep,'hgt',num2str(psver),'.mat'))
# Trainmatlab.v.0/get_la_stamps.m:32
    currdir=copy(pwd)
# Trainmatlab.v.0/get_la_stamps.m:33
    # getting the variables
    ij=ps.ij
# Trainmatlab.v.0/get_la_stamps.m:36
    hgt=hgt.hgt
# Trainmatlab.v.0/get_la_stamps.m:37
    # Get matlab version as function arguments change with the matlab version
    matlab_version=version('-release')
# Trainmatlab.v.0/get_la_stamps.m:41
    
    matlab_version=str2num(matlab_version[1:4])
# Trainmatlab.v.0/get_la_stamps.m:42
    
    # constructing the grid
    gridX,gridY=meshgrid(linspace(0,width,50),linspace(0,len_,50),nargout=2)
# Trainmatlab.v.0/get_la_stamps.m:45
    # computing the look angles
    look_angle=load(laname)
# Trainmatlab.v.0/get_la_stamps.m:48
    la0=dot(look_angle[1:2:end()],pi) / 180
# Trainmatlab.v.0/get_la_stamps.m:49
    la0=reshape(la0,50,50).T
# Trainmatlab.v.0/get_la_stamps.m:50
    la1000=dot(look_angle[2:2:end()],pi) / 180
# Trainmatlab.v.0/get_la_stamps.m:51
    la1000=reshape(la1000,50,50).T
# Trainmatlab.v.0/get_la_stamps.m:52
    la0_ps=griddata_version_control(gridX,gridY,la0,ij[:,3],ij[:,2],'linear',matlab_version)
# Trainmatlab.v.0/get_la_stamps.m:54
    
    la1000_ps=griddata_version_control(gridX,gridY,la1000,ij[:,3],ij[:,2],'linear',matlab_version)
# Trainmatlab.v.0/get_la_stamps.m:55
    
    la=la0_ps + multiply((la1000_ps - la0_ps),hgt) / 1000
# Trainmatlab.v.0/get_la_stamps.m:56
    lasavename=matlabarray(cat(insarpath,filesep,'la',num2str(psver)))
# Trainmatlab.v.0/get_la_stamps.m:57
    save(lasavename,'la')
    cd(insarpath)
    ps_plot(la)
    cd(currdir)