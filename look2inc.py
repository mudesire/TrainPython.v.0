# Autogenerated with SMOP 
from smop.core import *
# Trainmatlab.v.0/look2inc.m

    
@function
def look2inc(la=None,height=None,lat=None,*args,**kwargs):
    varargin = look2inc.varargin
    nargin = look2inc.nargin

    #LOOK2INC look angle to incidence angle
    
    #    [INCIDENCE]=LOOK2INC(LOOK_ANGLE,HEIGHT,LATITUDE)
    
    #    LOOK_ANGLE = Look angle (radians) (can be vector or matrix)
#    HEIGHT     = Height of satellite (m)
#    LATITUDE   = mean latitude of ground (degrees)
    
    #     Copyright (C) 2015  Bekaert David - University of Leeds
#     Email: eedpsb@leeds.ac.uk or davidbekaert.com
#     With permission from Andy Hooper
    
    #     This program is free software; you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation; either version 2 of the License, or
#     (at your option) any later version.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License along
#     with this program; if not, write to the Free Software Foundation, Inc.,
#     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
    
    # by Andrew Hooper, 2010
    
    if nargin < 3:
        lat=40
# Trainmatlab.v.0/look2inc.m:31
    
    lat1=dot(lat,pi) / 180
# Trainmatlab.v.0/look2inc.m:34
    WGS84_A=6378137.0
# Trainmatlab.v.0/look2inc.m:36
    
    WGS84_B=6356752.314
# Trainmatlab.v.0/look2inc.m:37
    
    Re=dot(WGS84_A,WGS84_B) / sqrt(dot(WGS84_A ** 2,sin(lat1) ** 2) + dot(WGS84_B ** 2,cos(lat1) ** 2))
# Trainmatlab.v.0/look2inc.m:38
    a=Re + height
# Trainmatlab.v.0/look2inc.m:40
    
    inc=copy(la)
# Trainmatlab.v.0/look2inc.m:41
    R=fminsearch(lambda p=None: (a ** 2 + p ** 2 - dot(dot(dot(2,a),p),cos(mean(ravel(la)))) - Re ** 2) ** 2,cat(600))
# Trainmatlab.v.0/look2inc.m:43
    for i in arange(1,length(ravel(la))).reshape(-1):
        R=fminsearch(lambda p=None: (a ** 2 + p ** 2 - dot(dot(dot(2,a),p),cos(la[i])) - Re ** 2) ** 2,R)
# Trainmatlab.v.0/look2inc.m:45
        inc[i]=pi - acos((Re ** 2 + R ** 2 - a ** 2) / 2 / Re / R)
# Trainmatlab.v.0/look2inc.m:46
    