# Autogenerated with SMOP 
from smop.core import *
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m

    
@function
def aps_spectrometer_PWV_meris_modis(*args,**kwargs):
    varargin = aps_spectrometer_PWV_meris_modis.varargin
    nargin = aps_spectrometer_PWV_meris_modis.nargin

    # aps_spectrometer_PWV_meris_modis(batchfile)
# Scipt to load meris and modis PWV data and compare each SAR data for the
# cloud free pixels.
    
    # Bekaert David -- University of Leeds
# 
# modifications:
# DB    08/2014     Initial codings
# DB    03/2015     Add bootstrapping to get the uncertancy of the linear
#                   mapping between PWV of MERIS and MODIS.
    
    save_dir='aps_m_M'
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:14
    n_boot_runs=1200
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:15
    curdir=copy(pwd)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:17
    fontsize=15
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:19
    # loading the date information
    meris_datapath=getparm_aps('meris_datapath',1)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:22
    modis_datapath=getparm_aps('modis_datapath',1)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:23
    stamps_processed=getparm_aps('stamps_processed',1)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:24
    if strcmp(stamps_processed,'y'):
        ps=load(getparm_aps('ll_matfile',1))
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:26
        dates=ps.day
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:27
        fprintf('Stamps processed structure \\n')
    else:
        ifgday_matfile=getparm_aps('ifgday_matfile',1)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:30
        dates=load(ifgday_matfile)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:31
        dates=dates.ifgday
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:32
        dates=reshape(dates,[],1)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:33
        dates=unique(dates)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:34
    
    #start loop here to calculate atmos correction for each date
    ndates=length(dates)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:40
    fprintf('Starting the computation for each SAR date \\n')
    calibration_matrix=NaN(cat(ndates,2))
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:42
    
    corr_vector=NaN(cat(ndates,1))
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:43
    fraction_vector=NaN(cat(ndates,1))
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:44
    std_vector=NaN(cat(ndates,2))
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:45
    calibration_matrix_boot=NaN(cat(n_boot_runs,2,ndates))
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:46
    if exist(cat(curdir,filesep,'figures'),'dir') != 7:
        mkdir(cat(curdir,filesep,'figures'))
    
    for n in arange(1,ndates).reshape(-1):
        date_str=datestr(dates[n,1],'yyyymmdd')
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:54
        meris_filename_PWV_nointerp=matlabarray(cat(meris_datapath,filesep,date_str,filesep,date_str,'_ZPWV_nointerp.xyz'))
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:56
        modis_filename_PWV_nointerp=matlabarray(cat(modis_datapath,filesep,date_str,filesep,date_str,'_ZPWV_nointerp.xyz'))
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:57
        # leave NaN's in the matrix.
        if exist(meris_filename_PWV_nointerp,'file') == 2 and exist(modis_filename_PWV_nointerp,'file') == 2:
            xyz_meris_PWV,temp=load_meris_SAR(meris_filename_PWV_nointerp,nargout=2)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:63
            xyz_modis_PWV,temp=load_meris_SAR(modis_filename_PWV_nointerp,nargout=2)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:64
            clear('temp')
            # keep only those points in common
            lonlat_modis=xyz_modis_PWV[:,1:2]
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:68
            lonlat_meris=xyz_meris_PWV[:,1:2]
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:69
            n_original=size(lonlat_meris,1)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:72
            lonlat,ix_modis,ix_meris=intersect(lonlat_modis,lonlat_meris,'rows','stable',nargout=3)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:74
            PWV_modis=xyz_modis_PWV[ix_modis,3]
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:76
            PWV_meris=xyz_meris_PWV[ix_meris,3]
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:77
            ix_nan=sum(isnan(cat(PWV_modis,PWV_meris)),2) > 0
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:79
            lonlat[ix_nan,:]=[]
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:80
            PWV_modis[ix_nan,:]=[]
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:81
            PWV_meris[ix_nan,:]=[]
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:82
            if length(PWV_meris) > 100:
                # number of gridpoitns left
                n_used=size(lonlat,1)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:86
                fraction_vector[n,1]=n_used / n_original
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:87
                A=matlabarray(cat(PWV_modis,ones(size(PWV_meris))))
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:90
                calibration_matrix[n,:]=lscov(A,PWV_meris)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:91
                corr_vector[n,1]=corr(PWV_modis,PWV_meris)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:92
                # the powerlaw bootstrap function as its not technique dependent
                std_vector[n,:],calibration_matrix_boot[:,:,n]=aps_powerlaw_bootstrap(A,PWV_meris,n_boot_runs,nargout=2)
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:97
                limits=matlabarray(cat(floor(min(cat([PWV_modis],[PWV_meris]))),ceil(max(cat([PWV_modis],[PWV_meris])))))
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:100
                h1=figure('name',cat('MODIS/MERIS PWV comparison ',date_str))
# Trainmatlab.v.0/aps_spectrometer_PWV_meris_modis.m:101
                plot(limits,limits,'k--')
                hold('on')
                plot(limits,multiply(calibration_matrix[n,1],limits) + calibration_matrix[n,2],'r-','linewidth',2)
                hold('on')
                plot(PWV_modis,PWV_meris,'k.')
                xlim(limits)
                ylim(limits)
                hold('on')
                plot(limits,multiply(calibration_matrix[n,1],limits) + calibration_matrix[n,2],'r-','linewidth',2)
                hold('on')
                plot(limits,limits,'k--')
                xlabel('MODIS PWV','fontsize',fontsize)
                ylabel('MERIS PWV','fontsize',fontsize)
                title(cellarray([cat(date_str,':'),cat('PWV_{MERIS} = ',num2str(round(dot(calibration_matrix[n,1],100)) / 100),' [+-',num2str(round(dot(std_vector[n,1],100)) / 100),'] *PWV_{MODIS} + ',num2str(round(dot(calibration_matrix[n,2],100)) / 100),' [+-',num2str(round(dot(std_vector[n,2],100)) / 100),']')]),'fontsize',fontsize)
                legend('1-to-1 relation','Linear fit',0)
                set(gca,'fontsize',fontsize)
                print_(h1,'-depsc',cat(curdir,filesep,'figures',filesep,'PWV_MERIS_MODIS_',date_str,'.eps'))
                print_(h1,'-dpng',cat(curdir,filesep,'figures',filesep,'PWV_MERIS_MODIS_',date_str,'.png'))
                close_(h1)
            fprintf(cat(num2str(n),' completed out of ',num2str(ndates),'\\n'))
        else:
            fprintf(cat(date_str,': no comparison\\n'))
    
    save(cat(modis_datapath,filesep,'MODIS_calibration.mat'),'calibration_matrix','corr_vector','fraction_vector','dates','std_vector','calibration_matrix_boot')