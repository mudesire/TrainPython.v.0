# Autogenerated with SMOP 
from smop.core import *
# matlab/aps_wrf_files.m

    # Script that generates the input files for WPS and WRF model. At the same
# time a file list is generated of the required WRF files. A spin up time
# of 12 Hr is assumed. This can be changed, but its recommended not to
# decrease the spin up time. The GFS data (0.5 deg) is assumed to be on a 6 Hr
# interval. For dates prior to 20061101 GDAS data will be set (1 deg). These are
# based on a 6 Hr interval.
    
    #     Copyright (C) 2015  Bekaert David - University of Leeds
#     Email: eedpsb@leeds.ac.uk or davidbekaert.com
# 
#     This program is free software; you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation; either version 2 of the License, or
#     (at your option) any later version.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License along
#     with this program; if not, write to the Free Software Foundation, Inc.,
#     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
    
    # By Bekaert David  -- University of Leeds
    
    # modifications:
# 20/11/2013    DB  Include an input file generation for WPS
# 19/12/2013    DB  Include GDAS files for pre 20061101 dates
# 25/12/2013    DB  Change GDAS to CFSR data, change to surface and pressure data
# 27/12/2013    DB  Include a fix for CFSR as a time stamp earlier is required for WRF
# 06/04/2014    DB  Fixed error in file definition for end of december dates
# 19/09/2014    DB  Add check on dimension for the parent and child grid
    
    ###--------------------------------###
###### CHANGES REQUIRED BY USER
    max_dom=2
# matlab/aps_wrf_files.m:39
    dx=25000
# matlab/aps_wrf_files.m:40
    dy=25000
# matlab/aps_wrf_files.m:41
    parent_grid_ratio=matlabarray(cat(1,5))
# matlab/aps_wrf_files.m:42
    i_parent_start=matlabarray(cat(1,10))
# matlab/aps_wrf_files.m:43
    j_parent_start=matlabarray(cat(1,8))
# matlab/aps_wrf_files.m:44
    e_we=matlabarray(cat(30,76))
# matlab/aps_wrf_files.m:45
    e_sn=matlabarray(cat(35,111))
# matlab/aps_wrf_files.m:46
    ref_lat=18.7
# matlab/aps_wrf_files.m:47
    ref_lon=- 102
# matlab/aps_wrf_files.m:48
    truelat1=30.0
# matlab/aps_wrf_files.m:49
    truelat2=60.0
# matlab/aps_wrf_files.m:50
    stand_lon=- 102
# matlab/aps_wrf_files.m:51
    map_proj='lambert'
# matlab/aps_wrf_files.m:52
    geog_data_path='/nfs/a1/software/geog'
# matlab/aps_wrf_files.m:53
    geog_data_res='3s'
# matlab/aps_wrf_files.m:54
    # larger 500 km track:
    i_parent_start=matlabarray(cat(1,10))
# matlab/aps_wrf_files.m:58
    j_parent_start=matlabarray(cat(1,8))
# matlab/aps_wrf_files.m:59
    e_we=matlabarray(cat(33,91))
# matlab/aps_wrf_files.m:60
    e_sn=matlabarray(cat(40,136))
# matlab/aps_wrf_files.m:61
    # check for which the WPS software otherwize will crash.
    if floor((e_we[2] - 1) / parent_grid_ratio[2]) != (e_we[2] - 1) / parent_grid_ratio[2] or floor((e_sn[2] - 1) / parent_grid_ratio[2]) != (e_sn[2] - 1) / parent_grid_ratio[2]:
        error(cat('your grid ratios for child and parent are not good! e_we(child) = parent_ratio * n + 1, where n needs to be integer'))
    
    fprintf('Edit aps_wrf_files.m such your domain(s) is(are) set properly \\n')
    keyboard
    ###### NO CHANGES BELOW
###--------------------------------###
    
    # getting the variables from the parms_aps file
    stamps_processed=getparm_aps('stamps_processed')
# matlab/aps_wrf_files.m:81
    ll_matfile=getparm_aps('ll_matfile')
# matlab/aps_wrf_files.m:82
    UTC_sat=getparm_aps('UTC_sat')
# matlab/aps_wrf_files.m:83
    t_spin_up='12:00'
# matlab/aps_wrf_files.m:84
    
    data_intervals=6
# matlab/aps_wrf_files.m:85
    
    save_folder=getparm_aps('wrf_datapath')
# matlab/aps_wrf_files.m:86
    # loading the data
    if strcmp(stamps_processed,'y'):
        ps=load(ll_matfile)
# matlab/aps_wrf_files.m:91
        dates=ps.day
# matlab/aps_wrf_files.m:92
        load('psver')
        fprintf('Stamps processed structure \\n')
    else:
        psver=2
# matlab/aps_wrf_files.m:96
        ifgday_matfile=getparm_aps('ifgday_matfile')
# matlab/aps_wrf_files.m:97
        ifgs_dates=load(ifgday_matfile)
# matlab/aps_wrf_files.m:98
        ifgs_dates=ifgs_dates.ifgday
# matlab/aps_wrf_files.m:99
        dates=reshape(ifgs_dates,[],1)
# matlab/aps_wrf_files.m:100
        dates=unique(dates)
# matlab/aps_wrf_files.m:101
        dates=datenum(num2str(dates),'yyyymmdd')
# matlab/aps_wrf_files.m:102
    
    t_SAR=str2num(UTC_sat[1:2]) + str2num(UTC_sat[4:5]) / 60
# matlab/aps_wrf_files.m:104
    t_spin=str2num(t_spin_up[1:2]) + str2num(t_spin_up[4:5]) / 60
# matlab/aps_wrf_files.m:105
    # the weather model spin time:
    t_spin_model=copy(t_spin)
# matlab/aps_wrf_files.m:107
    t_start_model=t_SAR - t_spin
# matlab/aps_wrf_files.m:108
    # add another time shift to include GFSR data such the full spin up time
# can be completed. Otherzise the first time stamp will not be found.
    t_spin=t_spin + data_intervals
# matlab/aps_wrf_files.m:111
    t_start=t_SAR - t_spin
# matlab/aps_wrf_files.m:112
    ## Start and end times
# getting the start date of the WRF model
    if t_start_model < 0:
        n_days_model=floor(t_start_model / 24)
# matlab/aps_wrf_files.m:118
        dates_model_wrf=dates - abs(n_days_model)
# matlab/aps_wrf_files.m:119
        time_model_wrf=abs(dot(n_days_model,24)) - abs(t_start_model)
# matlab/aps_wrf_files.m:120
    else:
        n_days_model=0
# matlab/aps_wrf_files.m:122
        dates_model_wrf=copy(dates)
# matlab/aps_wrf_files.m:123
        time_model_wrf=copy(t_start_model)
# matlab/aps_wrf_files.m:124
    
    # gettign the start time of the model
    time_model_ix_wrf=floor(time_model_wrf / data_intervals)
# matlab/aps_wrf_files.m:127
    time_model_wrf=dot(time_model_ix_wrf,data_intervals)
# matlab/aps_wrf_files.m:128
    time_model_wrf=num2str(time_model_wrf)
# matlab/aps_wrf_files.m:129
    if length(time_model_wrf) == 1:
        time_model_wrf=matlabarray(cat('0',time_model_wrf))
# matlab/aps_wrf_files.m:131
    
    # getting the last required time of model data
    time_model_end_wrf=dot(ceil(t_SAR / data_intervals),data_intervals)
# matlab/aps_wrf_files.m:134
    dates_model_end_wrf=copy(dates)
# matlab/aps_wrf_files.m:135
    if time_model_end_wrf == 24:
        time_model_end_wrf=0
# matlab/aps_wrf_files.m:137
        dates_model_end_wrf=dates_model_end_wrf + 1
# matlab/aps_wrf_files.m:138
    
    time_model_end_wrf=num2str(time_model_end_wrf)
# matlab/aps_wrf_files.m:140
    if length(time_model_end_wrf) == 1:
        time_model_end_wrf=matlabarray(cat('0',time_model_end_wrf))
# matlab/aps_wrf_files.m:142
    
    # getting the start date for the download of the files.
    if t_start < 0:
        n_days=floor(t_start / 24)
# matlab/aps_wrf_files.m:150
        dates_model=dates - abs(n_days)
# matlab/aps_wrf_files.m:151
        time_model=abs(dot(n_days,24)) - abs(t_start)
# matlab/aps_wrf_files.m:152
    else:
        n_days=0
# matlab/aps_wrf_files.m:154
        dates_model=copy(dates)
# matlab/aps_wrf_files.m:155
        time_model=copy(t_start)
# matlab/aps_wrf_files.m:156
    
    # gettign the start time of the model
    time_model_ix=floor(time_model / data_intervals)
# matlab/aps_wrf_files.m:159
    time_model=dot(time_model_ix,data_intervals)
# matlab/aps_wrf_files.m:160
    time_model=num2str(time_model)
# matlab/aps_wrf_files.m:161
    if length(time_model) == 1:
        time_model=matlabarray(cat('0',time_model))
# matlab/aps_wrf_files.m:163
    
    # getting the last required time of model data
    time_model_end=dot(ceil(t_SAR / data_intervals),data_intervals)
# matlab/aps_wrf_files.m:166
    dates_model_end=copy(dates)
# matlab/aps_wrf_files.m:167
    if time_model_end == 24:
        time_model_end=0
# matlab/aps_wrf_files.m:169
        dates_model_end=dates_model_end + 1
# matlab/aps_wrf_files.m:170
    
    time_model_end=num2str(time_model_end)
# matlab/aps_wrf_files.m:172
    if length(time_model_end) == 1:
        time_model_end=matlabarray(cat('0',time_model_end))
# matlab/aps_wrf_files.m:174
    
    ## Download data for the period:
    CFSR_flag=0
# matlab/aps_wrf_files.m:179
    GFS_flag=0
# matlab/aps_wrf_files.m:180
    data_filename_GDAS_prev=matlabarray([])
# matlab/aps_wrf_files.m:181
    if exist(cat(save_folder,filesep,'GFS_files.txt'),'file') == 2:
        delete(cat(save_folder,filesep,'GFS_files.txt'))
    
    if exist(cat(save_folder,filesep,'CFSR_files.txt'),'file') == 2:
        delete(cat(save_folder,filesep,'CFSR_files.txt'))
        delete(cat(save_folder,filesep,'CFSR_crop_download.txt'))
    
    for k in arange(1,length(dates)).reshape(-1):
        fprintf(cat('start_date = \'',datestr(dates_model[k],'yyyy-mm-dd'),'_',time_model,':00:00\', end_date = \'',datestr(dates_model_end[k],'yyyy-mm-dd'),'_',time_model_end,':00:00\',\\n'))
        ## start and end times 
     # for the WRF model
     # getting the model run times in days, hours minutes, seconds
        n_run_days_model_wrf=datenum(cat(datestr(dates_model_end_wrf[k],'yyyymmdd'),'_',time_model_end_wrf,'0000'),'yyyymmdd_HHMMSS') - datenum(cat(datestr(dates_model_wrf[k],'yyyymmdd'),'_',time_model_wrf,'0000'),'yyyymmdd_HHMMSS')
# matlab/aps_wrf_files.m:195
        n_run_days_int_model_wrf=floor(n_run_days_model_wrf)
# matlab/aps_wrf_files.m:196
        n_run_hours_model_wrf=dot((n_run_days_model_wrf - n_run_days_int_model_wrf),24)
# matlab/aps_wrf_files.m:197
        n_run_hours_int_model_wrf=floor(n_run_hours_model_wrf)
# matlab/aps_wrf_files.m:198
        n_run_minutes_model_wrf=dot((n_run_hours_model_wrf - n_run_hours_int_model_wrf),60)
# matlab/aps_wrf_files.m:199
        n_run_minutes_int_model_wrf=floor(n_run_minutes_model_wrf)
# matlab/aps_wrf_files.m:200
        n_run_seconds_model_wrf=round(dot((n_run_minutes_model_wrf - n_run_minutes_int_model_wrf),60))
# matlab/aps_wrf_files.m:201
        start_time_model_wrf=datenum(cat(datestr(dates_model_wrf[k],'yyyymmdd'),'_',time_model_wrf,'0000'),'yyyymmdd_HHMMSS')
# matlab/aps_wrf_files.m:203
        end_time_model_wrf=datenum(cat(datestr(dates_model_end_wrf[k],'yyyymmdd'),'_',time_model_end_wrf,'0000'),'yyyymmdd_HHMMSS')
# matlab/aps_wrf_files.m:204
        # getting the model run times in days, hours minutes, seconds
        n_run_days=datenum(cat(datestr(dates_model_end[k],'yyyymmdd'),'_',time_model_end,'0000'),'yyyymmdd_HHMMSS') - datenum(cat(datestr(dates_model[k],'yyyymmdd'),'_',time_model,'0000'),'yyyymmdd_HHMMSS')
# matlab/aps_wrf_files.m:209
        n_run_days_int=floor(n_run_days)
# matlab/aps_wrf_files.m:210
        n_run_hours=dot((n_run_days - n_run_days_int),24)
# matlab/aps_wrf_files.m:211
        n_run_hours_int=floor(n_run_hours)
# matlab/aps_wrf_files.m:212
        n_run_minutes=dot((n_run_hours - n_run_hours_int),60)
# matlab/aps_wrf_files.m:213
        n_run_minutes_int=floor(n_run_minutes)
# matlab/aps_wrf_files.m:214
        n_run_seconds=round(dot((n_run_minutes - n_run_minutes_int),60))
# matlab/aps_wrf_files.m:215
        start_time=datenum(cat(datestr(dates_model[k],'yyyymmdd'),'_',time_model,'0000'),'yyyymmdd_HHMMSS')
# matlab/aps_wrf_files.m:217
        end_time=datenum(cat(datestr(dates_model_end[k],'yyyymmdd'),'_',time_model_end,'0000'),'yyyymmdd_HHMMSS')
# matlab/aps_wrf_files.m:218
        n_datafiles=dot((end_time - start_time),24) / data_intervals + 1
# matlab/aps_wrf_files.m:221
        for kk in arange(1,n_datafiles).reshape(-1):
            data_time=start_time + dot((kk - 1),data_intervals) / 24
# matlab/aps_wrf_files.m:224
            data_time_str=datestr(data_time,'yyyymmdd_HHMM')
# matlab/aps_wrf_files.m:225
            GFSR_check=datenum(datestr(data_time,'yyyymmdd'),'yyyymmdd') - datenum('20061101','yyyymmdd')
# matlab/aps_wrf_files.m:228
            if GFSR_check < 0 and CFSR_flag == 0:
                fid_files2=fopen(cat(save_folder,filesep,'CFSR_files.txt'),'w')
# matlab/aps_wrf_files.m:230
                fid_files3=fopen(cat(save_folder,filesep,'CFSR_crop_download.txt'),'w')
# matlab/aps_wrf_files.m:231
                CFSR_flag=1
# matlab/aps_wrf_files.m:233
            else:
                if GFSR_check >= 0 and GFS_flag == 0:
                    fid_files=fopen(cat(save_folder,filesep,'GFS_files.txt'),'w')
# matlab/aps_wrf_files.m:235
                    GFS_flag=1
# matlab/aps_wrf_files.m:236
            # checking if the GFS file exists otherwize use GDAS files
            if GFSR_check < 0:
                # For GFSR an extra time stamp is needed. 
            # This is not required for GFS data
                skip_flag=0
# matlab/aps_wrf_files.m:243
                data_types=2
# matlab/aps_wrf_files.m:244
                ix_file_number=ceil(str2num(data_time_str[7:8]) / 5)
# matlab/aps_wrf_files.m:245
                if ix_file_number == 1:
                    filestr=matlabarray(cat(data_time_str[1:6],'01-',data_time_str[1:6],'05'))
# matlab/aps_wrf_files.m:247
                else:
                    if ix_file_number == 2:
                        filestr=matlabarray(cat(data_time_str[1:6],'06-',data_time_str[1:6],'10'))
# matlab/aps_wrf_files.m:249
                    else:
                        if ix_file_number == 3:
                            filestr=matlabarray(cat(data_time_str[1:6],'11-',data_time_str[1:6],'15'))
# matlab/aps_wrf_files.m:251
                        else:
                            if ix_file_number == 4:
                                filestr=matlabarray(cat(data_time_str[1:6],'16-',data_time_str[1:6],'20'))
# matlab/aps_wrf_files.m:253
                            else:
                                if ix_file_number == 5:
                                    filestr=matlabarray(cat(data_time_str[1:6],'21-',data_time_str[1:6],'25'))
# matlab/aps_wrf_files.m:255
                                else:
                                    if ix_file_number >= 6:
                                        # get the end day of the month
                                        dummy_month=num2str(str2num(data_time_str[5:6]) + 1)
# matlab/aps_wrf_files.m:258
                                        data_time_end_temp=str2num(data_time_str[1:4])
# matlab/aps_wrf_files.m:259
                                        if str2num(dummy_month) > 12:
                                            dummy_month='1'
# matlab/aps_wrf_files.m:262
                                            data_time_end_temp=data_time_end_temp + 1
# matlab/aps_wrf_files.m:263
                                        data_time_end_temp=num2str(data_time_end_temp)
# matlab/aps_wrf_files.m:265
                                        if length(dummy_month) == 1:
                                            dummy_month=matlabarray(cat('0',dummy_month))
# matlab/aps_wrf_files.m:268
                                        end_day_month=datestr(datenum(cat(data_time_end_temp,dummy_month,'01'),'yyyymmdd') - 1,'dd')
# matlab/aps_wrf_files.m:270
                                        filestr=matlabarray(cat(data_time_str[1:6],'26-',data_time_str[1:6],end_day_month))
# matlab/aps_wrf_files.m:271
                data_filename_GDAS=matlabarray(cat(datestr(dates[k],'yyyy'),filesep,'pgbh06.gdas.',filestr,'.tar \\n'))
# matlab/aps_wrf_files.m:277
                data_filename_GDAS2=matlabarray(cat(datestr(dates[k],'yyyy'),filesep,'flxf06.gdas.',filestr,'.tar \\n'))
# matlab/aps_wrf_files.m:278
                # have not been taken yet.
                if strcmp(data_filename_GDAS,data_filename_GDAS_prev) != 1:
                    fprintf(fid_files2,data_filename_GDAS)
                    fprintf(fid_files2,data_filename_GDAS2)
                    data_filename_GDAS_prev=copy(data_filename_GDAS)
# matlab/aps_wrf_files.m:285
                clear('filestr','data_filename_GDAS')
                ## the cropped download script:
            # auto-download cropped for CFSR not full globe download
                startdate_str=matlabarray(cat(data_time_str[1:4],'-',data_time_str[5:6],'-',data_time_str[7:8],' ',data_time_str[10:11],':',data_time_str[12:13]))
# matlab/aps_wrf_files.m:291
                enddate_str=matlabarray(cat(data_time_str[1:4],'-',data_time_str[5:6],'-',data_time_str[7:8],' ',data_time_str[10:11],':',data_time_str[12:13]))
# matlab/aps_wrf_files.m:292
                # 3!7-0.2-1:0.0.0,3!7-4.2-1:0.0.0, (temp)
            #3!7-0.2-1:0.2.3 (v-component of wind)
            #3!7-0.2-1:0.2.2 (u-component of wind)
            #3!7-0.2-1:0.3.1 (pressure reduced to msl)
            #3!7-0.2-1:0.3.5 (geopotential height)
                # defining the crop of the pressure level data
                lon_range=matlabarray(cat(floor(ref_lon - dot((dx / 1000),e_we[1]) / 110),ceil(ref_lon + dot((dx / 1000),e_we[1]) / 110)))
# matlab/aps_wrf_files.m:302
                lon_range[lon_range < - 180]=lon_range[lon_range < - 180] + 360
# matlab/aps_wrf_files.m:303
                lon_range[lon_range > 180]=lon_range[lon_range > 180] - 360
# matlab/aps_wrf_files.m:304
                lon_range=sort(lon_range)
# matlab/aps_wrf_files.m:305
                lat_range=matlabarray(cat(floor(ref_lat - dot((dy / 1000),e_sn[1]) / 110),ceil(ref_lat + dot((dy / 1000),e_sn[1]) / 110)))
# matlab/aps_wrf_files.m:306
                lat_range[lat_range < - 90]=- 90
# matlab/aps_wrf_files.m:307
                lat_range[lat_range > 90]=90
# matlab/aps_wrf_files.m:308
                lat_range=sort(lat_range)
# matlab/aps_wrf_files.m:309
                region_string=matlabarray(cat('nlat=',num2str(lat_range[2]),';slat=',num2str(lat_range[1]),';wlon=',num2str(lon_range[1]),';elon=',num2str(lon_range[2])))
# matlab/aps_wrf_files.m:310
                # the actual fetching lines of code
                surface_level_str=matlabarray(cat('wget --load-cookies cookiefile --post-data " dsid=ds093.0&rtype=S&rinfo=dsnum=093.0;startdate=',startdate_str,';enddate=',enddate_str,';parameters=3%%217-0.2-1:2.0.192,3%%217-0.2-1:0.3.5,3%%217-0.2-1:0.2.2,3%%217-0.2-1:0.2.3,3%%217-0.2-1:0.1.0,3%%217-0.2-1:0.1.13,3%%217-0.2-1:2.0.0,3%%217-0.2-1:10.2.0,3%%217-0.2-1:0.3.0,3%%217-0.2-1:0.0.0;level=521,522,523,524,107,223,221;product=3;grid_definition=62;ststep=yes;',region_string,'" http://rda.ucar.edu/php/dsrqst.php \\n'))
# matlab/aps_wrf_files.m:314
                pressure_level_str=matlabarray(cat('wget --load-cookies cookiefile --post-data " dsid=ds093.0&rtype=S&rinfo=dsnum=093.0;startdate=',startdate_str,';enddate=',enddate_str,';parameters=3%%217-0.2-1:0.0.0,3%%217-0.2-1:0.1.1,3%%217-0.2-1:0.2.2,3%%217-0.2-1:0.2.3,3%%217-0.2-1:0.3.1,3%%217-0.2-1:0.3.5;level=76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,221,361,362,363,557,562,563,574,577,581,913,914,219;product=3;grid_definition=57;ststep=yes;',region_string,'" http://rda.ucar.edu/php/dsrqst.php \\n'))
# matlab/aps_wrf_files.m:315
                surface_level_str_test=matlabarray(cat('wget -q -O - --post-data " dsid=ds093.0&rtype=S&rinfo=dsnum=093.0;startdate=',startdate_str,';enddate=',enddate_str,';parameters=3%%217-0.2-1:2.0.192,3%%217-0.2-1:0.3.5,3%%217-0.2-1:0.2.2,3%%217-0.2-1:0.2.3,3%%217-0.2-1:0.1.0,3%%217-0.2-1:0.1.13,3%%217-0.2-1:2.0.0,3%%217-0.2-1:10.2.0,3%%217-0.2-1:0.3.0,3%%217-0.2-1:0.0.0;level=521,522,523,524,107,223,221;product=3;grid_definition=62;ststep=yes;',region_string,'" http://rda.ucar.edu/php/dsrqst-test.php \\n'))
# matlab/aps_wrf_files.m:317
                pressure_level_str_test=matlabarray(cat('wget -q -O - --post-data " dsid=ds093.0&rtype=S&rinfo=dsnum=093.0;startdate=',startdate_str,';enddate=',enddate_str,';parameters=3%%217-0.2-1:0.0.0,3%%217-0.2-1:0.1.1,3%%217-0.2-1:0.2.2,3%%217-0.2-1:0.2.3,3%%217-0.2-1:0.3.1,3%%217-0.2-1:0.3.5;level=76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,221,361,362,363,557,562,563,574,577,581,913,914,219;product=3;grid_definition=57;ststep=yes;',region_string,'" http://rda.ucar.edu/php/dsrqst-test.php \\n'))
# matlab/aps_wrf_files.m:318
                if k == logical_and(1,kk) == 1:
                    user_str='# Replace <XXX> with the correct information. Do not include < > anymore! \\n'
# matlab/aps_wrf_files.m:321
                    user_str2='# No claims can be made as result of this program -- David Bekaert (University of Leeds) \\n'
# matlab/aps_wrf_files.m:322
                    coockie_str='wget --save-cookies cookiefile --post-data="email=<your_email_address>&passwd=<your_password>&action=login" https://rda.ucar.edu/cgi-bin/login \\n'
# matlab/aps_wrf_files.m:323
                    fprintf(fid_files3,user_str)
                    fprintf(fid_files3,user_str2)
                    fprintf(fid_files3,coockie_str)
                    clear('coockie_str','user_str','user_str2')
                fprintf(fid_files3,surface_level_str)
                fprintf(fid_files3,pressure_level_str)
            else:
                ## GFS download
            # For GFSR an extra time stamp is needed. 
            # This is not required for GFS data
                if kk > 1:
                    skip_flag=0
# matlab/aps_wrf_files.m:337
                else:
                    skip_flag=1
# matlab/aps_wrf_files.m:339
                if skip_flag == 0:
                    data_types=1
# matlab/aps_wrf_files.m:342
                    data_filename=matlabarray(cat(datestr(dates[k],'yyyy'),filesep,'GFS_Global_0p5deg_',data_time_str,'_anl.grib2 \\n'))
# matlab/aps_wrf_files.m:344
                    fprintf(fid_files,data_filename)
        ## closing the writing files
        if arange(k == 1,length(dates)):
            if skip_flag == 0:
                if GFS_flag == 1:
                    fclose(fid_files)
            if CFSR_flag == 1:
                fclose(fid_files2)
                fclose(fid_files3)
        if max_dom != 0 and skip_flag == 0:
            SAR_time_min=str2num(UTC_sat[4:5]) - str2num(datestr(start_time_model_wrf,'MM'))
# matlab/aps_wrf_files.m:365
            e_we_str=matlabarray([])
# matlab/aps_wrf_files.m:368
            e_sn_str=matlabarray([])
# matlab/aps_wrf_files.m:369
            e_vert_str=matlabarray([])
# matlab/aps_wrf_files.m:370
            dx_vector=copy(dx)
# matlab/aps_wrf_files.m:371
            dy_vector=copy(dy)
# matlab/aps_wrf_files.m:372
            dx_str=matlabarray([])
# matlab/aps_wrf_files.m:373
            dy_str=matlabarray([])
# matlab/aps_wrf_files.m:374
            grid_id_str=matlabarray([])
# matlab/aps_wrf_files.m:375
            parent_id_str=matlabarray([])
# matlab/aps_wrf_files.m:376
            i_parent_start_str=matlabarray([])
# matlab/aps_wrf_files.m:377
            j_parent_start_str=matlabarray([])
# matlab/aps_wrf_files.m:378
            parent_grid_ratio_str=matlabarray([])
# matlab/aps_wrf_files.m:379
            input_from_file_str=matlabarray([])
# matlab/aps_wrf_files.m:380
            frames_per_outfile_str=matlabarray([])
# matlab/aps_wrf_files.m:381
            history_interval_str=matlabarray([])
# matlab/aps_wrf_files.m:382
            history_begin_m_str=matlabarray([])
# matlab/aps_wrf_files.m:383
            nested_str=matlabarray([])
# matlab/aps_wrf_files.m:384
            specified_str=matlabarray([])
# matlab/aps_wrf_files.m:385
            start_date_str=matlabarray([])
# matlab/aps_wrf_files.m:386
            end_date_str=matlabarray([])
# matlab/aps_wrf_files.m:387
            geog_data_res_str=matlabarray([])
# matlab/aps_wrf_files.m:388
            for kk in arange(2,length(parent_grid_ratio)).reshape(-1):
                dx_vector[kk]=dx_vector[kk - 1] / parent_grid_ratio[kk]
# matlab/aps_wrf_files.m:392
                dy_vector[kk]=dy_vector[kk - 1] / parent_grid_ratio[kk]
# matlab/aps_wrf_files.m:393
            for kk in arange(1,max_dom).reshape(-1):
                e_we_str=matlabarray(cat(e_we_str,num2str(e_we[kk]),', '))
# matlab/aps_wrf_files.m:396
                e_sn_str=matlabarray(cat(e_sn_str,num2str(e_sn[kk]),', '))
# matlab/aps_wrf_files.m:397
                e_vert_str=matlabarray(cat(e_vert_str,num2str(30),', '))
# matlab/aps_wrf_files.m:398
                dx_str=matlabarray(cat(dx_str,num2str(dx_vector[kk]),', '))
# matlab/aps_wrf_files.m:399
                dy_str=matlabarray(cat(dy_str,num2str(dy_vector[kk]),', '))
# matlab/aps_wrf_files.m:400
                grid_id_str=matlabarray(cat(grid_id_str,num2str(kk),', '))
# matlab/aps_wrf_files.m:401
                parent_id_str=matlabarray(cat(parent_id_str,num2str(kk - 1),', '))
# matlab/aps_wrf_files.m:402
                i_parent_start_str=matlabarray(cat(i_parent_start_str,num2str(i_parent_start[kk]),', '))
# matlab/aps_wrf_files.m:403
                j_parent_start_str=matlabarray(cat(j_parent_start_str,num2str(j_parent_start[kk]),', '))
# matlab/aps_wrf_files.m:404
                parent_grid_ratio_str=matlabarray(cat(parent_grid_ratio_str,num2str(parent_grid_ratio[kk]),', '))
# matlab/aps_wrf_files.m:405
                input_from_file_str=matlabarray(cat(input_from_file_str,'.true., '))
# matlab/aps_wrf_files.m:406
                frames_per_outfile_str=matlabarray(cat(frames_per_outfile_str,num2str(1),', '))
# matlab/aps_wrf_files.m:407
                geog_data_res_str=matlabarray(cat(geog_data_res_str,' \'',geog_data_res,'\', '))
# matlab/aps_wrf_files.m:408
                if max_dom == 1:
                    # when one domain put the output time to correspond to the
                    # SAR time for the parant domain
                    history_begin_m_str=matlabarray(cat(num2str(SAR_time_min),', '))
# matlab/aps_wrf_files.m:413
                    history_interval_str=matlabarray(cat(num2str(60),', '))
# matlab/aps_wrf_files.m:414
                    nested_str=matlabarray(cat('.false.,'))
# matlab/aps_wrf_files.m:415
                    specified_str=matlabarray(cat('.true.'))
# matlab/aps_wrf_files.m:416
                    start_date_str=matlabarray(cat(' \'',datestr(dates_model_wrf[k],'yyyy-mm-dd'),'_',time_model_wrf,':00:00\','))
# matlab/aps_wrf_files.m:417
                    end_date_str=matlabarray(cat(' \'',datestr(dates_model_end_wrf[k],'yyyy-mm-dd'),'_',time_model_end_wrf,':00:00\','))
# matlab/aps_wrf_files.m:418
                else:
                    if kk == 1:
                        nested_str=matlabarray(cat('.false., '))
# matlab/aps_wrf_files.m:421
                        specified_str=matlabarray(cat('.true., '))
# matlab/aps_wrf_files.m:422
                    else:
                        nested_str=matlabarray(cat(nested_str,'.true., '))
# matlab/aps_wrf_files.m:425
                        specified_str=matlabarray(cat(specified_str,'.false., '))
# matlab/aps_wrf_files.m:426
                    if kk != max_dom:
                        # when having a nest use only the last time to fix for
                       # the SAR time. Keep parent at the hr timings
                        history_begin_m_str=matlabarray(cat(history_begin_m_str,num2str(0),', '))
# matlab/aps_wrf_files.m:432
                        history_interval_str=matlabarray(cat(history_interval_str,num2str(180),', '))
# matlab/aps_wrf_files.m:434
                        # the smallest domain
                        start_date_str=matlabarray(cat(start_date_str,' \'',datestr(dates_model_wrf[k],'yyyy-mm-dd'),'_',time_model_wrf,':00:00\', '))
# matlab/aps_wrf_files.m:437
                        end_date_str=matlabarray(cat(end_date_str,' \'',datestr(dates_model_end_wrf[k],'yyyy-mm-dd'),'_',time_model_end_wrf,':00:00\', '))
# matlab/aps_wrf_files.m:438
                    else:
                        # the nest with the SAR domain starts output at the SAR
                       # time after the hour on an hourly interval
                        history_begin_m_str=matlabarray(cat(history_begin_m_str,num2str(SAR_time_min),', '))
# matlab/aps_wrf_files.m:442
                        history_interval_str=matlabarray(cat(history_interval_str,num2str(60),', '))
# matlab/aps_wrf_files.m:443
                        # the smallest domain
                        start_date_str=matlabarray(cat(start_date_str,' \'',datestr(dates_model_wrf[k],'yyyy-mm-dd'),'_',time_model_wrf,':00:00\', '))
# matlab/aps_wrf_files.m:446
                        end_date_str=matlabarray(cat(end_date_str,' \'',datestr(dates_model_wrf[k],'yyyy-mm-dd'),'_',time_model_wrf,':00:00\', '))
# matlab/aps_wrf_files.m:447
            if exist(cat(save_folder,filesep,datestr(dates[k],'yyyymmdd')),'dir') != 7:
                mkdir(cat(save_folder,filesep,datestr(dates[k],'yyyymmdd')))
            fid=fopen(cat(save_folder,filesep,datestr(dates[k],'yyyymmdd'),filesep,'namelist.input'),'w')
# matlab/aps_wrf_files.m:456
            fprintf(fid,cat('\\n&time_control\\n'))
            fprintf(fid,cat('run_days \\t\\t = ',num2str(n_run_days_int_model_wrf),',\\n'))
            fprintf(fid,cat('run_hours \\t\\t = ',num2str(n_run_hours_int_model_wrf),',\\n'))
            fprintf(fid,cat('run_minutes \\t\\t = ',num2str(n_run_minutes_int_model_wrf),',\\n'))
            fprintf(fid,cat('run_seconds \\t\\t = ',num2str(n_run_seconds_model_wrf),',\\n'))
            fprintf(fid,cat('start_year \\t\\t = ',repmat(cat(datestr(start_time_model_wrf,'yyyy'),', '),1,max_dom),'\\n'))
            fprintf(fid,cat('start_month \\t\\t = ',repmat(cat(datestr(start_time_model_wrf,'mm'),', '),1,max_dom),'\\n'))
            fprintf(fid,cat('start_day \\t\\t = ',repmat(cat(datestr(start_time_model_wrf,'dd'),', '),1,max_dom),'\\n'))
            fprintf(fid,cat('start_hour \\t\\t = ',repmat(cat(datestr(start_time_model_wrf,'HH'),', '),1,max_dom),'\\n'))
            fprintf(fid,cat('start_minute \\t\\t = ',repmat(cat(datestr(start_time_model_wrf,'MM'),', '),1,max_dom),'\\n'))
            fprintf(fid,cat('start_second \\t\\t = ',repmat(cat(datestr(start_time_model_wrf,'SS'),', '),1,max_dom),'\\n'))
            fprintf(fid,cat('end_year \\t\\t = ',repmat(cat(datestr(end_time_model_wrf,'yyyy'),', '),1,max_dom),'\\n'))
            fprintf(fid,cat('end_month \\t\\t = ',repmat(cat(datestr(end_time_model_wrf,'mm'),', '),1,max_dom),'\\n'))
            fprintf(fid,cat('end_day \\t\\t = ',repmat(cat(datestr(end_time_model_wrf,'dd'),', '),1,max_dom),'\\n'))
            fprintf(fid,cat('end_hour \\t\\t = ',repmat(cat(datestr(end_time_model_wrf,'HH'),', '),1,max_dom),'\\n'))
            fprintf(fid,cat('end_minute \\t\\t = ',repmat(cat(datestr(end_time_model_wrf,'MM'),', '),1,max_dom),'\\n'))
            fprintf(fid,cat('end_second \\t\\t = ',repmat(cat(datestr(end_time_model_wrf,'SS'),', '),1,max_dom),'\\n'))
            fprintf(fid,cat('interval_seconds \\t = ',num2str(dot(dot(data_intervals,60),60)),',\\n'))
            fprintf(fid,cat('input_from_file \\t = ',input_from_file_str,'\\n'))
            fprintf(fid,cat('history_interval \\t = ',history_interval_str,'\\n'))
            fprintf(fid,cat('history_begin_m \\t = ',history_begin_m_str,'\\n'))
            fprintf(fid,cat('frames_per_outfile \\t = ',frames_per_outfile_str,'\\n'))
            fprintf(fid,cat('restart \\t\\t = .false.,\\n'))
            fprintf(fid,cat('restart_interval \\t = ',num2str(5000),',\\n'))
            fprintf(fid,cat('io_form_history \\t = ',num2str(2),',\\n'))
            fprintf(fid,cat('io_form_restart \\t = ',num2str(2),',\\n'))
            fprintf(fid,cat('io_form_input \\t\\t = ',num2str(2),',\\n'))
            fprintf(fid,cat('io_form_boundary \\t = ',num2str(2),',\\n'))
            fprintf(fid,cat('debug_level \\t\\t = ',num2str(0),',\\n'))
            fprintf(fid,cat('auxhist23_outname \\t = "wrfplev_d<domain>_<date>",\\n'))
            fprintf(fid,cat('io_form_auxhist23 \\t = ',num2str(2),',\\n'))
            fprintf(fid,cat('auxhist23_interval \\t = ',history_interval_str,'\\n'))
            fprintf(fid,cat('frames_per_auxhist23 \\t = ',frames_per_outfile_str,'\\n'))
            fprintf(fid,cat('auxhist23_begin_m \\t = ',history_begin_m_str,'\\n'))
            fprintf(fid,cat('/\\n\\n'))
            fprintf(fid,cat('\\n&domains\\n'))
            fprintf(fid,cat('time_step \\t\\t = ',num2str(round(dot(mean(cat(dy,dx)) / 1000,6))),',\\n'))
            fprintf(fid,cat('time_step_fract_num\\t = 0,\\n'))
            fprintf(fid,cat('time_step_fract_den\\t = 1,\\n'))
            fprintf(fid,cat('max_dom \\t\\t = ',num2str(max_dom),'\\n'))
            fprintf(fid,cat('e_we \\t\\t\\t = ',e_we_str,'\\n'))
            fprintf(fid,cat('e_sn \\t\\t\\t = ',e_sn_str,'\\n'))
            fprintf(fid,cat('e_vert \\t\\t\\t = ',e_vert_str,'\\n'))
            fprintf(fid,cat('p_top_requested \\t = ',num2str(5000),'\\n'))
            if GFSR_check < 0:
                fprintf(fid,cat('num_metgrid_levels\\t = ',num2str(38),'\\n'))
            else:
                fprintf(fid,cat('num_metgrid_levels\\t = ',num2str(27),'\\n'))
            fprintf(fid,cat('num_metgrid_soil_levels\\t = ',num2str(4),'\\n'))
            fprintf(fid,cat('dx \\t\\t\\t = ',dx_str,'\\n'))
            fprintf(fid,cat('dy \\t\\t\\t = ',dy_str,'\\n'))
            fprintf(fid,cat('grid_id \\t\\t = ',grid_id_str,'\\n'))
            fprintf(fid,cat('parent_id \\t\\t = ',parent_id_str,'\\n'))
            fprintf(fid,cat('i_parent_start \\t\\t = ',i_parent_start_str,'\\n'))
            fprintf(fid,cat('j_parent_start \\t\\t = ',j_parent_start_str,'\\n'))
            fprintf(fid,cat('parent_grid_ratio \\t = ',parent_grid_ratio_str,'\\n'))
            fprintf(fid,cat('parent_time_step_ratio \\t = ',parent_grid_ratio_str,'\\n'))
            fprintf(fid,cat('feedback \\t\\t = ',num2str(1),'\\n'))
            fprintf(fid,cat('smooth_option \\t\\t = ',num2str(0),'\\n'))
            fprintf(fid,cat('/\\n'))
            fprintf(fid,'\\n&physics\\n')
            fprintf(fid,cat('mp_physics \\t\\t = ',repmat('3, ',1,max_dom),'\\n'))
            fprintf(fid,cat('ra_lw_physics \\t\\t = ',repmat('1, ',1,max_dom),'\\n'))
            fprintf(fid,cat('ra_sw_physics \\t\\t = ',repmat('1, ',1,max_dom),'\\n'))
            fprintf(fid,cat('radt \\t\\t\\t = ',repmat('30, ',1,max_dom),'\\n'))
            fprintf(fid,cat('sf_sfclay_physics\\t = ',repmat('1, ',1,max_dom),'\\n'))
            fprintf(fid,cat('sf_surface_physics\\t = ',repmat('2, ',1,max_dom),'\\n'))
            fprintf(fid,cat('bl_pbl_physics\\t\\t = ',repmat('1, ',1,max_dom),'\\n'))
            fprintf(fid,cat('bldt \\t\\t\\t = ',repmat('0, ',1,max_dom),'\\n'))
            fprintf(fid,cat('cu_physics \\t\\t = ',repmat('1, ',1,max_dom),'\\n'))
            fprintf(fid,cat('cudt \\t\\t\\t = ',repmat('5, ',1,max_dom),'\\n'))
            fprintf(fid,cat('isfflx \\t\\t\\t = 1,\\n'))
            fprintf(fid,cat('ifsnow \\t\\t\\t = 1,\\n'))
            fprintf(fid,cat('icloud \\t\\t\\t = 1,\\n'))
            fprintf(fid,cat('surface_input_source \\t = 1,\\n'))
            fprintf(fid,cat('num_soil_layers \\t = 4,\\n'))
            fprintf(fid,cat('sf_urban_physics \\t = ',repmat('0, ',1,max_dom),'\\n'))
            fprintf(fid,cat('/\\n'))
            fprintf(fid,'\\n&fdda\\n')
            fprintf(fid,cat('/\\n'))
            fprintf(fid,'\\n&dynamics\\n')
            fprintf(fid,cat('w_damping  \\t\\t = 0,\\n'))
            fprintf(fid,cat('diff_opt \\t\\t = 1,\\n'))
            fprintf(fid,cat('km_opt  \\t\\t = 4,\\n'))
            fprintf(fid,cat('diff_6th_opt\\t\\t = ',repmat('0, ',1,max_dom),'\\n'))
            fprintf(fid,cat('diff_6th_factor \\t = ',repmat('0.12, ',1,max_dom),'\\n'))
            fprintf(fid,cat('base_temp \\t\\t = 290,\\n'))
            fprintf(fid,cat('damp_opt \\t\\t = 0,\\n'))
            fprintf(fid,cat('zdamp\\t\\t\\t = ',repmat('5000., ',1,max_dom),'\\n'))
            fprintf(fid,cat('dampcoef \\t\\t = ',repmat('0.2, ',1,max_dom),'\\n'))
            fprintf(fid,cat('khdif \\t\\t\\t = ',repmat('0, ',1,max_dom),'\\n'))
            fprintf(fid,cat('kvdif \\t\\t\\t = ',repmat('0, ',1,max_dom),'\\n'))
            fprintf(fid,cat('non_hydrostatic \\t = ',repmat('.true., ',1,max_dom),'\\n'))
            fprintf(fid,cat('moist_adv_opt\\t\\t = ',repmat('1, ',1,max_dom),'\\n'))
            fprintf(fid,cat('scalar_adv_opt\\t\\t = ',repmat('1, ',1,max_dom),'\\n'))
            fprintf(fid,cat('/\\n'))
            fprintf(fid,'\\n&bdy_control\\n')
            fprintf(fid,cat('spec_bdy_width  \\t = 5,\\n'))
            fprintf(fid,cat('spec_zone  \\t\\t = 1,\\n'))
            fprintf(fid,cat('relax_zone \\t\\t = 4,\\n'))
            fprintf(fid,cat('specified \\t\\t = ',specified_str,'\\n'))
            fprintf(fid,cat('nested\\t\\t\\t = ',nested_str,'\\n'))
            fprintf(fid,cat('/\\n'))
            fprintf(fid,'\\n&grib2\\n')
            fprintf(fid,cat('/\\n'))
            fprintf(fid,'\\n&namelist_quilt\\n')
            fprintf(fid,cat('nio_tasks_per_group\\t = 0,\\n'))
            fprintf(fid,cat('nio_groups \\t\\t = 1,\\n'))
            fprintf(fid,cat('/\\n'))
            fprintf(fid,'\\n&diags\\n')
            fprintf(fid,cat('p_lev_diags \\t\\t = 1,\\n'))
            fprintf(fid,cat('num_press_levels \\t = 37,\\n'))
            fprintf(fid,cat('press_levels \\t\\t = 100000, 97500, 95000, 92500, 90000, 87500, 85000, 82500, 80000, 77500, 75000, 70000, 65000, 60000, 55000, 50000, 45000, 40000, 35000, 30000, 25000, 22500, 20000, 17500, 15000, 12500, 10000, 7000, 5000, 3000, 2000, 1000, 700, 500, 300, 200, 100,\\n'))
            fprintf(fid,cat('/\\n'))
            fclose(fid)
            for ll in arange(1,data_types).reshape(-1):
                if data_types == 2:
                    if ll == 1:
                        fid_wps=fopen(cat(save_folder,filesep,datestr(dates[k],'yyyymmdd'),filesep,'namelist.wps.pressure'),'w')
# matlab/aps_wrf_files.m:598
                        file_prefix='\'PRESS\''
# matlab/aps_wrf_files.m:599
                        metgrid_prefix='\'SFC\',\'PRESS\''
# matlab/aps_wrf_files.m:600
                    else:
                        if ll == 2:
                            fid_wps=fopen(cat(save_folder,filesep,datestr(dates[k],'yyyymmdd'),filesep,'namelist.wps.surface'),'w')
# matlab/aps_wrf_files.m:603
                            file_prefix='\'SFC\''
# matlab/aps_wrf_files.m:604
                            metgrid_prefix='\'SFC\',\'PRESS\''
# matlab/aps_wrf_files.m:605
                else:
                    fid_wps=fopen(cat(save_folder,filesep,datestr(dates[k],'yyyymmdd'),filesep,'namelist.wps'),'w')
# matlab/aps_wrf_files.m:608
                    file_prefix='\'FILE\''
# matlab/aps_wrf_files.m:609
                    metgrid_prefix='\'FILE\''
# matlab/aps_wrf_files.m:610
                ### WPS file
                fprintf(fid_wps,'&share\\n')
                fprintf(fid_wps,cat('wrf_core \\t\\t\\t = \'ARW\',\\n'))
                fprintf(fid_wps,cat('max_dom \\t\\t\\t = ',num2str(max_dom),',\\n'))
                fprintf(fid_wps,cat('start_date \\t\\t\\t = ',start_date_str,'\\n'))
                fprintf(fid_wps,cat('end_date  \\t\\t\\t = ',end_date_str,'\\n'))
                fprintf(fid_wps,cat('interval_seconds \\t = ',num2str(dot(dot(data_intervals,60),60)),',\\n'))
                fprintf(fid_wps,cat('io_form_geogrid \\t = 2,\\n'))
                fprintf(fid_wps,cat('/\\n'))
                fprintf(fid_wps,'\\n&geogrid\\n')
                fprintf(fid_wps,cat('parent_id \\t\\t\\t = ',parent_id_str,'\\n'))
                fprintf(fid_wps,cat('parent_grid_ratio \\t = ',parent_grid_ratio_str,'\\n'))
                fprintf(fid_wps,cat('i_parent_start \\t\\t = ',i_parent_start_str,'\\n'))
                fprintf(fid_wps,cat('j_parent_start \\t\\t = ',j_parent_start_str,'\\n'))
                fprintf(fid_wps,cat('e_we \\t\\t\\t\\t = ',e_we_str,'\\n'))
                fprintf(fid_wps,cat('e_sn \\t\\t\\t\\t = ',e_sn_str,'\\n'))
                fprintf(fid_wps,cat('geog_data_res \\t\\t = ',geog_data_res_str,'\\n'))
                fprintf(fid_wps,cat('dx \\t\\t\\t\\t\\t = ',num2str(dx),',\\n'))
                fprintf(fid_wps,cat('dy \\t\\t\\t\\t\\t = ',num2str(dy),',\\n'))
                fprintf(fid_wps,cat('map_proj \\t\\t\\t = \'',map_proj,'\',\\n'))
                fprintf(fid_wps,cat('ref_lat \\t\\t\\t =  ',num2str(ref_lat),',\\n'))
                fprintf(fid_wps,cat('ref_lon  \\t\\t\\t =  ',num2str(ref_lon),',\\n'))
                fprintf(fid_wps,cat('truelat1 \\t\\t\\t = ',num2str(truelat1),',\\n'))
                fprintf(fid_wps,cat('truelat2 \\t\\t\\t =  ',num2str(truelat2),',\\n'))
                fprintf(fid_wps,cat('stand_lon \\t\\t\\t =  ',num2str(stand_lon),',\\n'))
                fprintf(fid_wps,cat('geog_data_path \\t\\t = \'',geog_data_path,'\',\\n'))
                fprintf(fid_wps,cat('/\\n'))
                fprintf(fid_wps,'\\n&ungrib\\n')
                fprintf(fid_wps,cat('out_format \\t\\t\\t = \'WPS\',\\n'))
                fprintf(fid_wps,cat('prefix \\t\\t\\t\\t = ',file_prefix,',\\n'))
                fprintf(fid_wps,cat('/\\n'))
                fprintf(fid_wps,'\\n&metgrid\\n')
                fprintf(fid_wps,cat('fg_name \\t\\t\\t = ',metgrid_prefix,',\\n'))
                fprintf(fid_wps,cat('io_form_metgrid \\t = 2,\\n'))
                fprintf(fid_wps,cat('/\\n'))
                fclose(fid_wps)
    